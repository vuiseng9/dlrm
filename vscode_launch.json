{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        // [Codebase] Action with Unique identifier (Architecture/Dataset)
        {
            "name": "[DLRM] dlrm_s_criteo_kaggle.sh", // Replicate DLRM with Kaggle Criteo Dataset as outlined in paper
            "type": "python",
            "request": "launch",
            "env": {
                "CUDA_VISIBLE_DEVICES": "0",
            },
            "cwd": "${workspaceFolder}/dlrm",
            "program": "dlrm_s_pytorch.py",
            "args": [
                "--arch-sparse-feature-size=16",
                "--arch-mlp-bot=13-512-256-64-16",
                "--arch-mlp-top=512-256-1",
                "--data-generation=dataset",
                "--data-set=kaggle",
                "--raw-data-file=./input/train.txt",
                "--processed-data-file=./input/kaggleAdDisplayChallenge_processed.npz",
                "--loss-function=bce",
                "--round-targets=True",
                "--learning-rate=0.1",
                "--mini-batch-size=128",
                "--print-freq=1024",
                "--print-time",
                "--test-mini-batch-size=16384",
                "--test-num-workers=16",
                "--use-gpu",
                "--dataset-multiprocessing",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "[NNCF-DLRM] test FP32 dlrm_s_criteo_kaggle",
            "type": "python",
            "request": "launch",
            "env": {
                "CUDA_VISIBLE_DEVICES": "0",
            },
            "cwd": "${workspaceFolder}/dlrm",
            "program": "dlrm_s_pytorch_nncf.py",
            "args": [
                "--arch-sparse-feature-size=16",
                "--arch-mlp-bot=13-512-256-64-16",
                "--arch-mlp-top=512-256-1",
                "--data-generation=dataset",
                "--data-set=kaggle",
                "--raw-data-file=./input/train.txt",
                "--processed-data-file=./input/kaggleAdDisplayChallenge_processed.npz",
                "--loss-function=bce",
                "--round-targets=True",
                "--learning-rate=0.1",
                "--mini-batch-size=128",
                "--print-freq=1",
                "--print-time",
                "--test-mini-batch-size=16384",
                "--test-num-workers=16",
                "--use-gpu",
                "--dataset-multiprocessing",
                "--test-freq=1",
                "--load-model=ckpt/criteo_kaggle.pt",
                "--inference-only"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "[NNCF-DLRM] test INT8 dlrm_s_criteo_kaggle",
            "type": "python",
            "request": "launch",
            "env": {
                "CUDA_VISIBLE_DEVICES": "0",
            },
            "cwd": "${workspaceFolder}/dlrm",
            "program": "dlrm_s_pytorch_nncf.py",
            "args": [
                "--arch-sparse-feature-size=16",
                "--arch-mlp-bot=13-512-256-64-16",
                "--arch-mlp-top=512-256-1",
                "--data-generation=dataset",
                "--data-set=kaggle",
                "--raw-data-file=./input/train.txt",
                "--processed-data-file=./input/kaggleAdDisplayChallenge_processed.npz",
                "--loss-function=bce",
                "--round-targets=True",
                "--learning-rate=0.1",
                "--mini-batch-size=128",
                "--print-freq=1",
                "--print-time",
                "--test-mini-batch-size=16384",
                "--test-num-workers=16",
                "--use-gpu",
                "--dataset-multiprocessing",
                "--test-freq=1",
                "--load-model=ckpt/criteo_kaggle.pt",
                "--inference-only",
                "--nncf_config=dlrm_kaggle_int8_nncfcfg.json",
                "--log-dir=/tmp/vscode-runs/dlrm/"
            ],
            "console": "integratedTerminal"
        },
    ]
}
